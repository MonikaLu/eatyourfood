generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Recipe {
    id          String    @id @default(cuid())
    title       String
    content     String?
    published   Boolean   @default(false)
    author      User?     @relation(fields: [authorId], references: [id])
    authorId    String?
    ingredients Product[]
}

model User {
    id        String   @id @default(cuid())
    name      String?
    email     String?  @unique
    createdAt DateTime @default(now()) @map(name: "created_at")
    updatedAt DateTime @updatedAt @map(name: "updated_at")
    recipes   Recipe[]

    @@map(name: "users")
}

enum Technology {
    JavaScript
    React
    Java
    Django
    MongoDB
    Angular
}

model Project {
    id           String       @id @default(cuid())
    projectName  String
    customerName String
    image_url    String
    description  String
    technologies Technology[]
    fromDate     DateTime
    toDate       DateTime
}

model Vendor {
    id      String    @id @default(cuid())
    name    String
    image   String
    Product Product[]
}

model ProductCategory {
    id        String   @id @default(cuid())
    depth     Int
    name      String
    Product   Product? @relation(fields: [productId], references: [id])
    productId String?
}

model Store {
    id      String    @id @default(cuid())
    url     String
    logo    String
    Product Product[]
}

model Product {
    id            String            @id @default(cuid())
    name          String
    brand         String
    description   String
    nutrition     String
    store         Store             @relation(fields: [storeId], references: [id])
    current_price Int
    image         String
    url           String
    vendor        Vendor            @relation(fields: [vendorId], references: [id])
    fromDate      DateTime
    toDate        DateTime
    vendorId      String
    category      ProductCategory[]
    storeId       String
    Recipe        Recipe?           @relation(fields: [recipeId], references: [id])
    recipeId      String?
}
